---
import HamburgerMenu from "@icons/HamburgerMenu.astro";
import Cart from "@icons/Cart.astro";
import Image from "@components/Image.astro";

// Obtiene la ruta actual desde Astro
const currentPath = Astro.url.pathname;
---

<nav class="backdrop-blur-md fixed top-0 left-0 right-0 z-50">
    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
        <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
            <Image imagePath="/src/assets/logo.webp" altText="Logo Pizza Galaxia" classname="h-8 w-auto" />
            <h1 class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">Pizza Galaxia</h1>
        </a>
        <button id="menu-toggle" data-collapse-toggle="navbar-default" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-default" aria-expanded="false">
            <HamburgerMenu />
        </button>
        <div class="hidden w-full md:block md:w-auto" id="navbar-sticky">
            <ul class="font-medium flex flex-col p-4 md:p-0 mt-4 border md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0">
                <li>
                    <a href="/" class={`block py-2 px-3 rounded md:p-0 ${currentPath === "/" ? "text-blue-700 dark:text-blue-500" : "text-gray-900 hover:text-blue-700 dark:text-white dark:hover:text-blue-500"}`} aria-current={currentPath === "/" ? "page" : undefined}>Inicio</a>
                </li>
                <li>
                    <a href="/location" class={`block py-2 px-3 rounded md:p-0 ${currentPath === "/location" ? "text-blue-700 dark:text-blue-500" : "text-gray-900 hover:text-blue-700 dark:text-white dark:hover:text-blue-500"}`} aria-current={currentPath === "/location" ? "page" : undefined}>Pedir online</a>
                </li>
                <li>
                    <a href="/about" class={`block py-2 px-3 rounded md:p-0 ${currentPath === "/about" ? "text-blue-700 dark:text-blue-500" : "text-gray-900 hover:text-blue-700 dark:text-white dark:hover:text-blue-500"}`} aria-current={currentPath === "/about" ? "page" : undefined}>Quienes somos</a>
                </li>
                <li>
                    <a href="/contact" class={`block py-2 px-3 rounded md:p-0 ${currentPath === "/contact" ? "text-blue-700 dark:text-blue-500" : "text-gray-900 hover:text-blue-700 dark:text-white dark:hover:text-blue-500"}`} aria-current={currentPath === "/contact" ? "page" : undefined}>Contacto</a>
                </li>
                <li>
                    <a href="/cart" aria-label="Ir al carrito de compras" class={`block py-2 px-3 rounded md:p-0 ${currentPath === "/cart" ? "text-blue-700 dark:text-blue-500" : "text-gray-900 hover:text-blue-700 dark:text-white dark:hover:text-blue-500"}`} aria-current={currentPath === "/cart" ? "page" : undefined}>
                        <span id="cart-icon" class="relative inline-block">
                            <Cart />
                            <span id="notification-dot" class="absolute top-0 right-0 h-2 w-2 bg-red-600 rounded-full animate-pulse hidden"></span>
                        </span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<style>
    #navbar-sticky {
        display: none;
    }

    #navbar-sticky.show {
        display: block;
    }

    @media (min-width: 768px) {
        #navbar-sticky {
            display: flex !important;
        }
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const menuToggle = document.getElementById("menu-toggle");
        const navbar = document.getElementById("navbar-sticky");
        const notificationDot = document.getElementById("notification-dot");

        if (menuToggle && navbar) {
            menuToggle.addEventListener("click", function () {
                navbar.classList.toggle("show");
                const isExpanded = navbar.classList.contains("show");
                menuToggle.setAttribute("aria-expanded", isExpanded ? "true" : "false");
            });
        }

        function updateNotificationDot() {
            const savedItemsJson = localStorage.getItem("savedItems");
            const savedItems = savedItemsJson ? JSON.parse(savedItemsJson) : [];

            if (notificationDot) {
                if (Array.isArray(savedItems) && savedItems.length > 0) {
                    notificationDot.classList.remove("hidden");
                } else {
                    notificationDot.classList.add("hidden");
                }
            }
        }

        // Inicializa el punto de notificación
        updateNotificationDot();

        // Agrega event listeners a todos los botones de compra
        const saveImageButtons = document.querySelectorAll("[id^='save-image-']");
        saveImageButtons.forEach((button) => {
            button.addEventListener("click", () => {
                const uniqueId = button.id.split("-")[2];

                if (uniqueId && uniqueId.trim() !== "") {
                    const savedItemsJson = localStorage.getItem("savedItems") || "[]";
                    const savedItems = JSON.parse(savedItemsJson);

                    // Obtén la ruta de la imagen y el precio
                    const dynamicImage = document.querySelector(`#dynamic-image-${uniqueId}`);
                    const priceSpan = button.closest(".flex")?.querySelector("span.price"); // Manejar null

                    if (dynamicImage && priceSpan) {
                        const imagePath = dynamicImage.getAttribute("src");
                        const price = priceSpan.textContent?.trim();

                        // Solo agrega si no existe
                        if (!savedItems.some((item: { imagePath: string }) => item.imagePath === imagePath)) {
                            const item = { imagePath, price };
                            savedItems.push(item);
                            localStorage.setItem("savedItems", JSON.stringify(savedItems));
                        }
                    } else {
                        console.error("No se encontró la imagen o el precio.");
                    }

                    // Recargar la página si el punto de notificación se muestra
                    location.reload();
                    // Actualiza el punto de notificación inmediatamente
                    updateNotificationDot();
                } else {
                    console.warn("El uniqueId es inválido o está vacío. No se agregará nada.");
                }
            });
        });
    });
</script>
